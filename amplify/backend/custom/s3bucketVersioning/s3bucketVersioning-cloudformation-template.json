{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "env": {
      "Type": "String"
    },
    "tagEnvironment": {
      "Type": "String",
      "Default": "production"
    },
    "tagOwner": {
      "Type": "String",
      "Default": "di-aws-control-tower"
    },
    "tagService": {
      "Type": "String",
      "Default": "identity-broker"
    },
    "tagSystem": {
      "Type": "String",
      "Default": "control-tower"
    },
    "tagProduct": {
      "Type": "String",
      "Default": "GOV.UK One Login"
    }
  },
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "team-amplify-hostingbucket-lambda-role-${env}"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "S3Permissions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:ListAllMyBuckets",
                    "s3:PutBucketVersioning"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "LogsPermissions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "tagEnvironment"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "tagOwner"
            }
          },
          {
            "Key": "Service",
            "Value": {
              "Ref": "tagService"
            }
          },
          {
            "Key": "System",
            "Value": {
              "Ref": "tagSystem"
            }
          },
          {
            "Key": "Product",
            "Value": {
              "Ref": "tagProduct"
            }
          }
        ]
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {
          "Fn::Sub": "team-amplify-hostingbucket-lambda-${env}"
        },
        "Description": "Lambda function to update the versioning of the amplify hosting bucket",
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "tagEnvironment"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "tagOwner"
            }
          },
          {
            "Key": "Service",
            "Value": {
              "Ref": "tagService"
            }
          },
          {
            "Key": "System",
            "Value": {
              "Ref": "tagSystem"
            }
          },
          {
            "Key": "Product",
            "Value": {
              "Ref": "tagProduct"
            }
          }
        ],
        "Handler": "index.lambda_handler",
        "Environment": {
          "Variables": {
            "BUCKET_PATTERN": "amplify-.*-hostingbucket.*"
          }
        },
        "MemorySize": 128,
        "Role": {
          "Fn::Sub": "${LambdaExecutionRole.Arn}"
        },
        "Timeout": 30,
        "Runtime": "python3.9",
        "Code": {
          "ZipFile": "import boto3\nimport cfnresponse\nimport logging\nimport re\nimport os\nfrom botocore.config import Config\n# logging\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\ndef lambda_handler(event, context):\n  responseData = {}\n  bucket_pattern = os.environ['BUCKET_PATTERN']\n  s3 = boto3.client('s3')\n  logger.info(f'{bucket_pattern=}')\n  resp = s3.list_buckets()\n  for bucket in resp['Buckets']:\n    if re.search(bucket_pattern, bucket['Name']):\n      bucket_name = bucket[\"Name\"]\n      logger.info(f\"Enabling versioning on bucket: {bucket_name}\")\n      try:\n        s3.put_bucket_versioning(Bucket=bucket_name,\n                VersioningConfiguration={\n                    'Status': 'Enabled'\n            }\n        )\n      except Exception as e:\n        logger.error(f\"Error occurred: {str(e)}\")\n        responseData['Data'] = \"Failure\"\n        cfnresponse.send(event, context, cfnresponse.FAILED, responseData)\n  responseData['Data'] = \"Success\"\n  cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)\n"
        }
      }
    },
    "ConfigureAmplifyBucket": {
      "Type": "Custom::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "Version": "1.0"
      }
    }
  }
}